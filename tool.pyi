from extra import *
from tkinter import *
from _typeshed import Incomplete

config: Incomplete
win: Incomplete
start: Incomplete
setfile: Incomplete
modfile: Incomplete
dn: Incomplete
theme: Incomplete
language: Incomplete
var1: Incomplete
car: Incomplete

class ModuleError(Exception): ...
class lang: ...

def load(name) -> None: ...
def error(code, desc: str = ...): ...

class welcome:
    ck: Incomplete
    frame: Incomplete
    def __init__(self) -> None: ...
    def reframe(self) -> None: ...
    def main(self) -> None: ...
    def license(self) -> None: ...
    def private(self) -> None: ...
    def done(self) -> None: ...
    def clos(self) -> None: ...

class settings: ...

def loadset() -> None: ...
def messpop(message, color: str = ...) -> None: ...
def get_time() -> None: ...
def re_folder(path) -> None: ...
def un_dtbo(bn: str = ...) -> any: ...
def padtbo() -> any: ...
def logodump(bn: str = ...): ...
def logopack() -> int: ...

subwin2: Incomplete
subwin3: Incomplete
notepad: Incomplete
tab: Incomplete
tab2: Incomplete
tab3: Incomplete
tab4: Incomplete
tab5: Incomplete
tab6: Incomplete
scrollbar: Incomplete
canvas1: Incomplete
frame_bg: Incomplete

def upjdt() -> None: ...
def getframe(title): ...
def subp(com: int = ..., title: str = ..., master: any = ...): ...
def mpkman() -> None: ...

class installmpk(Toplevel):
    mconf: Incomplete
    inner_zipdata: Incomplete
    inner_filenames: Incomplete
    prog: Incomplete
    state: Incomplete
    installb: Incomplete
    def __init__(self, mpk) -> None: ...
    def install(self): ...

class packxx:
    dbfs: Incomplete
    dbgs: Incomplete
    edbgs: Incomplete
    scale: Incomplete
    spatchvb: Incomplete
    delywj: Incomplete
    lg: Incomplete
    ck: Incomplete
    label: Incomplete
    def __init__(self, list_) -> None: ...
    def update_label(self, value) -> None: ...
    def start_(self) -> None: ...

def dbkxyt() -> None: ...

class packss:
    def __init__(self) -> None: ...

def packsuper(sparse, dbfz, size, set_, lb, del_: int = ...): ...

class StdoutRedirector:
    text_space: Incomplete
    def __init__(self, text_widget) -> None: ...
    def write(self, string) -> None: ...
    @staticmethod
    def flush() -> None: ...
    def __exit__(self) -> None: ...

def call(exe, kz: str = ..., out: int = ..., shstate: bool = ..., sp: int = ...): ...
def download_file() -> None: ...
def jboot(bn: str = ...): ...
def dboot(nm: str = ...): ...
def packrom(edbgs, dbgs, dbfs, scale, parts, spatch, dely: int = ...) -> any: ...
def rdi(work, dname) -> any: ...
def input_(title: str = ..., text: str = ...) -> str: ...
def unpackrom(ifile) -> None: ...
def rwork() -> str: ...
def unpack(chose, form: any = ...): ...
def ask_win(text: str = ..., ok=..., cancel=...) -> int: ...

class dirsize:
    rsize_v: Incomplete
    num: Incomplete
    get: Incomplete
    list_f: Incomplete
    dname: Incomplete
    size: int
    def __init__(self, dir: str, num: int = ..., get: int = ..., list_f: str = ...) -> None: ...
    def rsize(self, size: int, num: int): ...
    @staticmethod
    def rsizelist(dname, size, file) -> None: ...

def datbr(work, name, brl: any): ...
def mkerofs(name, level, work) -> None: ...
def make_ext4fs(name, work, sparse) -> None: ...
def mke2fs(name, work, sparse): ...

class handle_log:
    @staticmethod
    def uploadlog() -> None: ...
    @staticmethod
    def putlog() -> None: ...

def selectp(self) -> None: ...
def listdir() -> None: ...
def delwork() -> None: ...
def rmdir(path, up: int = ...) -> None: ...
def newp() -> None: ...
def get_all_file_paths(directory) -> Ellipsis: ...
def setf(n, w) -> None: ...
def set_theme(self) -> None: ...
def set_language(self) -> None: ...

class zip_file:
    def __init__(self, file, dst_dir) -> None: ...

def packzip() -> None: ...
def modpath(): ...
def cmm(): ...
def dndfile(files) -> None: ...
def sdxz(other) -> None: ...

rzf: Incomplete
tsk: Incomplete
tr: Incomplete
show: Incomplete
zyf1: Incomplete
xmcd: Incomplete
info: Incomplete
frame1: Incomplete
frame3: Incomplete
LB1: Incomplete

class unpackg:
    ch: Incomplete
    fm: Incomplete
    lsg: Incomplete
    def __init__(self) -> None: ...
    def hd(self, *args) -> None: ...
    def refs(self, N: Incomplete | None = ...): ...
    def refs2(self): ...
    def close_(self) -> None: ...

slocal: Incomplete
sf1: Incomplete
sf2: Incomplete
sf3: Incomplete
LB2: Incomplete

def startwjjj(self) -> None: ...

slo: Incomplete
LB3: Incomplete
tab4_1: Incomplete
link: Incomplete

def open_github(o) -> None: ...

photo: Incomplete

class format_conversion(Toplevel):
    f: Incomplete
    h: Incomplete
    list_b: Incomplete
    def __init__(self) -> None: ...
    def relist(self, *other) -> None: ...
    @staticmethod
    def refile(f): ...
    def conversion(self) -> None: ...

def loadgif(gif) -> None: ...

hide_gifl: bool

class load_car:
    gifs: Incomplete
    def __init__(self, ind: int = ...) -> None: ...
    def endupdate(self) -> None: ...
